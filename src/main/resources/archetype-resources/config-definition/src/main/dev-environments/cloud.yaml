#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
# AEM configuration for AEM Cloud Service (STAGE + PROD)

nodes:

- node: aem-author
  roles:
  - role: ${projectName}-aem-cms
    variant: aem-author

- node: aem-publish
  roles:
  - role: ${projectName}-aem-cms
    variant: aem-publish

- node: aem-dispatcher
  roles:
  - role: aem-dispatcher-cloud
    variant: aem-publish
  config:
    dispatcher:
      # Uncomment this to allow access to Package Manager on Publish
      #filter:
      #- _merge_
      #- url: /crx/packmgr(/.*)?
      #  type: allow


config:
  contentPackage.group: ${packageGroupName}
  app:
    # Default log level for application code
    logLevel: warn
#if ( $optionContextAwareConfig == "y" || $optionEditableTemplates == "y" )
    # Whether to deploy conf content with editable template definitions
    confContent: true
#end
    # Whether to deploy sample content
    sampleContent: true

  httpd:
    headers:
      # Set default expiration time for text/html responses (also affects dispatcher caching/invalidation)
      htmlExpirationTimeMin: 0

  # Replication configuration not required for AEM cloud service
  replication:
    author.generatePackage: false
    publish.generatePackage: false


tenants:
- tenant: ${projectName}
  config:
    httpd:
      # Simplified server name setup that can be deployed to any host name using "*" als server alias
#if ( $optionWcmioHandler != "y" )
      # This simplified setup may lead to invalid links generated on the publish instances - use the alternative listed below instead
#end
      serverName: publish
      serverAliasNames:
      - "*"
      # Alternative: Use this setup to configure individual hostnames for dev/stage/prod in the cloud
      #cloudManagerConditional:
      #- targetEnvironment: dev
      #  serverName: publish-XXX.adobeaemcloud.com
      #- targetEnvironment: stage
      #  serverName: publish-XXX.adobeaemcloud.com
      #- targetEnvironment: prod
      #  serverName: publish-XXX.adobeaemcloud.com
      rootRedirect.url: /en.html
    sling.mapping.rootPath: /content/${projectName}
